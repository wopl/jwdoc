<?xml version="1.0" encoding="UTF-8"?>
<!--
<?xml-stylesheet href="urn:x-daps:xslt:profiling:docbook45-profile.xsl" 
                 type="text/xml" title="Profiling step"?>
-->
<!DOCTYPE part PUBLIC
 "-//OASIS//DTD DocBook XML V4.5//EN"
 "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" >

<part id="part.install">
 <title>Installation</title>
 
 <toc>  </toc>

<!-- 
 <chapter id="cha.install">
  <title>Installation</title>
-->
  <chapter id="base_install">
   <title>base OS installation</title>
   <para></para>
   <para>The base installation of Jobsworth 4.0 is very easy
        (big improvement to previous releases), once a server with
        some SQL-database and a servlet container has been set up. For
        those of you not setting up such servers frequently, I have
        added some more screenshots and commands, that might help you
        speeding up the installation process.</para>

  <note>
   <para>
       The following installation instructions are based on FreeBSD&reg; 9.2.
       Other Unix-like operating systems may also work, once a LAMP server has been set up.
       Especially pathes to configuration files differ in various distributions
       from FreeBSD&reg; and have to be adapted individually.
     </para>
  </note>
    <para>
    First of all get an operating system on a dedicated machine running. Typically Jobsworth
    only uses server functionality, therefore a graphical user interface (e.g. Gnome or KDE) is
    not necessary. If you are new to server installation, such GUI would help you to find your
    way around (e.g. looking on the web for HowTo's). 
    </para>

  </chapter>
  <chapter id="database">
   <title>Database</title>
   <para></para>
     <para>
     Install the database-server package. You can either use mysql or
     postgresql. The following example shows the setup of
     <emphasis>mysql</emphasis>
     . After invoking mysql from the command-line you should see a screen like this:
     </para>
     <screen width="100%" role="smaller">$ <userinput>mysql</userinput>
Welcome to the MySQL monitor. Commands end with ; or \g.
Your MySQL connection id is 6
Server version: 5.5.33 Source distribution

Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rigths reserved.
Oracle is a registered trademark of Oracle Corporation and/or its 
affiliates. Other names may be trademarks of their respective
owners.

Type &apos;help;&apos; or '\h' for help. Type '\c' to clear current input statement.

mysql></screen>
     <important>
      <para>
       If you see any minus-signs in the screenshot above: This is some unresolved
       rendering error problem (for PDFs only?). Be aware that those minus-signs
       shall NOT be typed as part of the configuration scripts that will follow.
      </para>
     </important>
     <para>Now type in the following commands to create the jobsworth database and 
     an admin-user. Feel free to adjust database-name, user-id and password and
     note it for later configuration. Then quit mysql-console.</para>
     <screen><userinput>CREATE DATABASE mydb DEFAULT CHARACTER SET utf8</userinput>
<userinput>CREATE USER &apos;monty&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;some_pass&apos;;</userinput>
<userinput>GRANT ALL PRIVILEGES ON *.* TO 'monty'@'localhost' WITH GRANT OPTION</userinput>
<userinput>quit</userinput></screen>
     <note>
      <para>
       At a later stage in this installation process Jobsworth will setup all tables
       and initial data on its first call.
      </para> 
     </note>
     <para>
      To enable the start of mysql during start of your server, the following entry has
      to be inserted into your startup configuration file (e.g. /etc/rc.conf)
     </para>
     <screen><userinput>mysql_enable="YES"</userinput></screen>
  </chapter>
  
  <chapter id="apache">
   <title>Apache</title>
     <para>Installation of Apache Web-Server on most OS distributions is pretty
     straightforward. Just install the packages delivered with your distribution.
     For this example I have installed Apache V2.2.</para>
     
     <para>
      To enable the start of Apache Web-Server during start of your server,
      the following entry (depending on your OS and apache version) has to be
      inserted into your startup configuration
      file (e.g. /etc/rc.conf)
     </para>
     <screen><userinput>apache22_enable="YES"</userinput></screen>
     
     
   <para>In any browser type in the URL of your Jobsworth server. For example: </para>
   <screen>http://172.20.50.4</screen>
     <para>A simple screen shows, that Apache is running.</para>
     <figure>
      <title>Apache works</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="apache.png" width="100%" />
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="apache.png" width="100%" />
       </imageobject>
      </mediaobject>
     </figure>
    </chapter>
    
  <chapter id="servletcontainer">
   <title>Servlet container</title>
   <para>
    Install Apache Tomcat (or another java servlet container) and make sure you can get
    to the default installation home page. How to install Tomcat or some other servlet
    container is beyond the scope of these instructions (still, some more details will follow here)
    but the basic details can be found in the
    <ulink url="http://tomcat.apache.org/tomcat-7.0-doc/">documentation</ulink>
    . Don't be afraid of all those XML configuration
    files in Tomcat; mostly they can be left to default values.
   </para>
   <para>
    There is one file you will need to edit and that is context.xml.
    This file defines all the configuration for your application.
    Copy the
    <ulink url="https://github.com/ari/jobsworth/blob/master/config/context.example.xml">example</ulink>
    into the tomcat configuration folder and set all
    the variables to reasonable choices for your system.
   </para>

   <!-- include context.example.xml file for servlet-container configuration -->
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="../snippets/context.example.xml" />
   
   
     <para>
      To enable the start of Tomcat Servlet container during start of your server,
      the following entry has to be inserted into your startup configuration
      file (e.g. /etc/rc.conf)
     </para>
     <screen><userinput>tomcat7_enable="YES"</userinput></screen>

     <para>In any browser type in the URL of your Jobsworth server followed by port 8080. For example: </para>
     <screen>http://172.20.50.4:8080</screen>
     <para>If you see the following screen, your Tomcat installation has been successfull.</para>
     <figure>
      <title>Tomcat works</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="tomcat.png" width="100%" />
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="tomcat.png" width="100%" />
       </imageobject>
      </mediaobject>
     </figure> 
  </chapter>
  <chapter id="email">
   <title>E-Mail</title>
   <para>
    When jobsworth sends outgoing emails for task updates, they will have
    a reply address which looks like this:
   </para> 
   <screen>task-1234@acme.domain.com.au</screen>
   <para>
    If a user hits reply to that email, you want it to be appended to the
    task comments. Here's how to set this up for sendmail;
    adapt the script for your own mail server. Mail can be running on a different
    server to jobsworth because we use HTTP to push the mail from your mail
    server to jobsworth.
   </para>
   <para>
    Sendmail:
    Add an entry to /etc/mail/local-host-names for your hostname:
   </para>
   <screen>acme.domain.com.au</screen>
   <para>
    Add an entry to /etc/mail/aliases to create an alias that will hand off emails
    to a script:
   </para>
   <screen>jobsworth: "|/usr/local/share/jobsworth/mail_script.sh"</screen>
   <para>
    Add an entry to /etc/mail/virtusertable to redirect all emails to your domain
    to the above alias
   </para>
   <screen>@acme.domain.com.au        jobsworth</screen>
   <para>
    run
   </para>
   <screen>make; make restart</screen>
   <para>
    in /etc/mail to rebuild the sendmail databases.
    Now create a script at /usr/local/share/jobsworth/mail_script.sh with the following contents
   </para>
   <screen>
#!/bin/sh
SECRET=password1234
URL=https://acme.domain.com.au/emails
cat $2 | /usr/local/bin/curl -s -k --data-urlencode secret=${SECRET} --data-urlencode email@- ${URL}
   </screen>
   <para>
Make sure you change the password and you make it the same as the password in the context.xml file.
   </para>
  </chapter>
  
  <chapter id="jwinstall">
   <title>Jobsworth</title>
   <para>
    Stop tomcat. With FreeBSD use the following command:
   </para>

   <screen><userinput>service tomcat7 stop</userinput></screen>
   <para>
   Enter Tomcat web-directory e.g.</para>
   <screen>/usr/local/apache-tomcat-7.0/webapps</screen>

   <para> and delete (or better rename) the subdirectory ROOT. Now copy the latest version of
    Jobsworth installation file
    <ulink url="https://github.com/ari/jobsworth/releases">ROOT.war</ulink>
    into the Tomcat web-directory. Finally enable Tomcat again with
   </para>
   <screen><userinput>service tomcat7 start</userinput></screen>
   <para>
   The ROOT.war-file will now be extracted into a ROOT subdirectory.
   Give it a few seconds to complete before you continue.
   </para>
   <tip><para>For the installation of any new version
   of Jobsworth you only have to replace the ROOT.war file.</para></tip>

  </chapter>
<!-- 
 </chapter>
--> 
</part>